// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/microhq/db-srv/proto/db/db.proto

/*
Package go_micro_srv_db_db is a generated protocol buffer package.

It is generated from these files:
	github.com/microhq/db-srv/proto/db/db.proto

It has these top-level messages:
	Database
	Record
	ReadRequest
	ReadResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package go_micro_srv_db_db

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Database struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
}

func (m *Database) Reset()                    { *m = Database{} }
func (m *Database) String() string            { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()               {}
func (*Database) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Database) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Database) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

type Record struct {
	Id       string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Created  int64             `protobuf:"varint,2,opt,name=created" json:"created,omitempty"`
	Updated  int64             `protobuf:"varint,3,opt,name=updated" json:"updated,omitempty"`
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Bytes    string            `protobuf:"bytes,5,opt,name=bytes" json:"bytes,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Record) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Record) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Record) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Record) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Record) GetBytes() string {
	if m != nil {
		return m.Bytes
	}
	return ""
}

type ReadRequest struct {
	Database *Database `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Id       string    `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadRequest) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateRequest struct {
	Database *Database `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Record   *Record   `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateRequest) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

func (m *CreateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateResponse struct {
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type UpdateRequest struct {
	Database *Database `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Record   *Record   `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateRequest) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

func (m *UpdateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type DeleteRequest struct {
	Database *Database `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Id       string    `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteRequest) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type SearchRequest struct {
	Database *Database         `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Limit    int64             `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset   int64             `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SearchRequest) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

func (m *SearchRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type SearchResponse struct {
	Records []*Record `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SearchResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterType((*Database)(nil), "go.micro.srv.db.db.Database")
	proto.RegisterType((*Record)(nil), "go.micro.srv.db.db.Record")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.db.db.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.db.db.ReadResponse")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.db.db.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.db.db.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.db.db.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.db.db.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.db.db.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.db.db.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "go.micro.srv.db.db.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "go.micro.srv.db.db.SearchResponse")
}

func init() { proto.RegisterFile("github.com/microhq/db-srv/proto/db/db.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xde, 0x24, 0xdd, 0x6c, 0x7d, 0xb5, 0xa5, 0x0c, 0x22, 0xa1, 0x08, 0xd6, 0x9c, 0x0a, 0x62,
	0x02, 0x75, 0x0f, 0x8b, 0xde, 0xd6, 0xea, 0x65, 0xf1, 0x60, 0x44, 0xc4, 0xe3, 0x4c, 0x66, 0x76,
	0x1b, 0x6c, 0x9a, 0xee, 0xcc, 0xb4, 0xd0, 0x83, 0x07, 0x7f, 0x88, 0x3f, 0xcf, 0xff, 0x21, 0x79,
	0x33, 0xa9, 0x9b, 0x3a, 0x5b, 0x84, 0x0a, 0xde, 0xe6, 0x65, 0xde, 0xfb, 0xde, 0x37, 0xef, 0x7d,
	0x1f, 0x81, 0xe7, 0x37, 0x85, 0x9e, 0xaf, 0x59, 0x92, 0x57, 0x65, 0x5a, 0x16, 0xb9, 0xac, 0xe6,
	0xb7, 0x29, 0x67, 0x2f, 0x94, 0xdc, 0xa4, 0x2b, 0x59, 0xe9, 0x2a, 0xe5, 0x2c, 0xe5, 0x2c, 0xc1,
	0x33, 0x21, 0x37, 0x55, 0x82, 0x49, 0x89, 0x92, 0x9b, 0x84, 0xb3, 0x84, 0xb3, 0xf8, 0x1c, 0xba,
	0x33, 0xaa, 0x29, 0xa3, 0x4a, 0x10, 0x02, 0x9d, 0x25, 0x2d, 0x45, 0xe4, 0x8d, 0xbd, 0xc9, 0x83,
	0x0c, 0xcf, 0xe4, 0x11, 0x9c, 0x6a, 0xca, 0x16, 0x22, 0xf2, 0xf1, 0xa3, 0x09, 0xe2, 0x9f, 0x1e,
	0x84, 0x99, 0xc8, 0x2b, 0xc9, 0xc9, 0x00, 0xfc, 0x82, 0xdb, 0x12, 0xbf, 0xe0, 0x24, 0x82, 0xb3,
	0x5c, 0x0a, 0xaa, 0x05, 0xc7, 0x92, 0x20, 0x6b, 0xc2, 0xfa, 0x66, 0xbd, 0xe2, 0x78, 0x13, 0x98,
	0x1b, 0x1b, 0x92, 0x19, 0x74, 0x4b, 0xa1, 0x29, 0xa7, 0x9a, 0x46, 0x9d, 0x71, 0x30, 0xe9, 0x4d,
	0x27, 0xc9, 0x9f, 0x5c, 0x13, 0xd3, 0x31, 0x79, 0x6f, 0x53, 0xdf, 0x2e, 0xb5, 0xdc, 0x66, 0xbb,
	0xca, 0x9a, 0x2a, 0xdb, 0x6a, 0xa1, 0xa2, 0x53, 0x43, 0x15, 0x83, 0xd1, 0x6b, 0xe8, 0xb7, 0x0a,
	0xc8, 0x10, 0x82, 0xaf, 0x62, 0x6b, 0x19, 0xd7, 0xc7, 0xba, 0x70, 0x43, 0x17, 0xeb, 0xdd, 0x1b,
	0x31, 0x78, 0xe5, 0x5f, 0x78, 0xf1, 0x67, 0xe8, 0x65, 0x82, 0xf2, 0x4c, 0xdc, 0xae, 0x85, 0xd2,
	0xe4, 0x02, 0xba, 0xdc, 0x0e, 0x0b, 0xeb, 0x7b, 0xd3, 0x27, 0x2e, 0x9e, 0xcd, 0x40, 0xb3, 0x5d,
	0xb6, 0x9d, 0x92, 0xdf, 0x4c, 0x29, 0xbe, 0x84, 0x87, 0x06, 0x58, 0xad, 0xaa, 0xa5, 0x12, 0x64,
	0x0a, 0xa1, 0xc4, 0xd7, 0x59, 0xdc, 0xd1, 0xfd, 0xef, 0xcf, 0x6c, 0x66, 0xfc, 0x0d, 0xfa, 0x6f,
	0x70, 0xb4, 0xc7, 0xd3, 0xfb, 0xdd, 0xde, 0xff, 0xeb, 0xf6, 0x43, 0x18, 0x34, 0xed, 0xcd, 0x23,
	0x6a, 0x42, 0x9f, 0x70, 0xa3, 0xff, 0x8d, 0x50, 0xd3, 0xde, 0x12, 0xfa, 0x02, 0xfd, 0x99, 0x58,
	0x88, 0x7f, 0x41, 0x68, 0x7f, 0x81, 0x43, 0x18, 0x34, 0xd0, 0xb6, 0xd9, 0x77, 0x1f, 0xfa, 0x1f,
	0x05, 0x95, 0xf9, 0xfc, 0xf8, 0x6e, 0x57, 0x77, 0x0c, 0xe1, 0xa3, 0x21, 0x52, 0x57, 0x65, 0xab,
	0xdd, 0x21, 0x5f, 0x2c, 0x8a, 0xb2, 0xd0, 0xd6, 0x75, 0x26, 0x20, 0x8f, 0x21, 0xac, 0xae, 0xaf,
	0x95, 0xd0, 0x51, 0x07, 0x3f, 0xdb, 0xe8, 0x38, 0xbf, 0xbc, 0x83, 0x41, 0xc3, 0xc9, 0x0a, 0xfb,
	0x1c, 0xce, 0xcc, 0x7a, 0x54, 0xe4, 0xe1, 0x43, 0x0e, 0x6d, 0xb2, 0x49, 0x9d, 0xfe, 0x08, 0xc0,
	0x9f, 0x5d, 0x92, 0x2b, 0xe8, 0xd4, 0x2e, 0x21, 0x4f, 0xdd, 0x35, 0x3b, 0x63, 0x8e, 0xc6, 0xf7,
	0x27, 0xd8, 0xed, 0x9c, 0x90, 0x0f, 0x10, 0x1a, 0xbd, 0x92, 0x67, 0xae, 0xec, 0x96, 0x95, 0x46,
	0xf1, 0xa1, 0x94, 0xbb, 0x90, 0x46, 0x71, 0x6e, 0xc8, 0x96, 0x19, 0xdc, 0x90, 0x7b, 0x82, 0x45,
	0x48, 0xa3, 0x2b, 0x37, 0x64, 0x4b, 0xce, 0x6e, 0xc8, 0x3d, 0x59, 0x22, 0xa4, 0x59, 0x8a, 0x1b,
	0xb2, 0x25, 0x22, 0x37, 0x64, 0x7b, 0xa7, 0xf1, 0x09, 0x0b, 0xf1, 0x87, 0xf2, 0xf2, 0x57, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb7, 0xbd, 0x1c, 0xfa, 0x7f, 0x06, 0x00, 0x00,
}
